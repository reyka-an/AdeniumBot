// <auto-generated />
using System;
using Adenium.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AdeniumBot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20250904150658_RenameCoinsToExp")]
    partial class RenameCoinsToExp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Adenium.Models.BlacklistLink", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetId")
                        .HasColumnType("integer");

                    b.HasKey("OwnerId", "TargetId");

                    b.HasIndex("TargetId");

                    b.ToTable("BlacklistLinks");
                });

            modelBuilder.Entity("Adenium.Models.FavoriteLink", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetId")
                        .HasColumnType("integer");

                    b.HasKey("OwnerId", "TargetId");

                    b.HasIndex("TargetId");

                    b.ToTable("FavoriteLinks");
                });

            modelBuilder.Entity("Adenium.Models.PlayerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("DiscordUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Exp")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DiscordUserId")
                        .IsUnique();

                    b.ToTable("PlayerProfiles");
                });

            modelBuilder.Entity("Adenium.Models.BlacklistLink", b =>
                {
                    b.HasOne("Adenium.Models.PlayerProfile", "Owner")
                        .WithMany("Blacklist")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Adenium.Models.PlayerProfile", "Target")
                        .WithMany("BlacklistedBy")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Adenium.Models.FavoriteLink", b =>
                {
                    b.HasOne("Adenium.Models.PlayerProfile", "Owner")
                        .WithMany("Favorites")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Adenium.Models.PlayerProfile", "Target")
                        .WithMany("FavoritedBy")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("Adenium.Models.PlayerProfile", b =>
                {
                    b.Navigation("Blacklist");

                    b.Navigation("BlacklistedBy");

                    b.Navigation("FavoritedBy");

                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
